input:
  file:
    paths: [ ./config/sample.data ]
    codec: all-bytes

pipeline:
  processors:
    - modbus:
        bytes_per_address: 2      # Optional, default 2. How many bytes per address for fields.
        data_length:              # Bytes length not Address length.
          byte_index: 0x02        # Optional, default 0x02. The index of the first byte for data length.
          num_bytes: 2            # Optional, default 2. How many bytes to define the data length.
          big_endian: true        # Optional, default true.
        crc_checking:
          enabled: true           # Optional, default true. The CRC matching value is the last 2, 4 or 8  bytes. It will take all bytes before the CRC matching value to get calculated CRC value.  It will throw exception if enabled and crc checking failed.
          type: MODBUS            # Optional, default MODBUS. Options: X25, CCITT, MODBUS, CRC16, XMODEM, XMODEM2, CRC32, IEEE, Castagnoli, CRC32C, Koopman, CRC64ISO, CRC64ECMA
          big_endian: false       # Optional, default true
        fields:
          -
            name: "ThermostatL"
            attributes:
              starting_address: 0x10
              raw_type: "Int16"   # Int16, Uint16, 
              big_endian: true    # Optional, default true.
            properties:
              value_type: "Float"
              scale: 0.1
          -
            name: "ThermostatH"
            attributes:
              starting_address: 0x11
              raw_type: "Int16"
              big_endian: true    # Optional, default true.
            properties:
              value_type: "Float"
              scale: 0.1
          -
            name: "AlarmMode"
            attributes:
              starting_address: 0x12
              raw_type: "Int16"
            properties:
              value_type: "Int"
          -
            name: "Temperature"
            attributes:
              starting_address: 0x13
              raw_type: "Int16"
              big_endian: true    # Optional, default true.
            properties:
              value_type: "Float"
              scale: 0.1
    - log:
        level: INFO
        message: "meta"
        fields_mapping: |-
          root.modbus_crc_checked = meta("modbus_crc_checked")
              
output:
  stdout: {}

logger:
  level: INFO
  format: logfmt
  add_timestamp: false
  static_fields:
    '@service': benthos